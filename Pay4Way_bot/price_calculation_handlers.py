"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command

from keyboards import (
    get_price_calculation_keyboard,
    get_cancel_price_calculation_keyboard,
    get_add_to_cart_from_calculation_keyboard,
    get_delivery_type_keyboard,
    get_delivery_type_keyboard_for_calculation,
    get_weight_keyboard,
    get_back_keyboard
)
from price_calculator import (
    calculate_item_price,
    extract_price_value,
    get_delivery_type_name,
    get_delivery_cost,
    format_price_display
)

router = Router()

class PriceCalculationStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã"""
    waiting_for_original_price = State()
    waiting_for_final_price = State()
    waiting_for_delivery_type = State()
    waiting_for_weight = State()
    showing_result = State()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–∞
calculation_data = {}



@router.callback_query(F.data == "start_price_calculation")
async def start_price_calculation(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã"""
    await callback.answer()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
    current_data = await state.get_data()
    cart = current_data.get('cart', [])
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
    calculation_data.clear()
    await state.clear()
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await state.update_data(cart=cart)
    
    await state.set_state(PriceCalculationStates.waiting_for_original_price)
    
    await callback.message.edit_text(
        "üí∞ **–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞**\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ (—Ç–æ–ª—å–∫–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–∞–º–æ–≥–æ —Ç–æ–≤–∞—Ä–∞).\n\n"
      
        "‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=get_cancel_price_calculation_keyboard()
    )

@router.message(PriceCalculationStates.waiting_for_original_price)
async def handle_original_price(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞"""
    price_text = message.text.strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
    original_price = extract_price_value(price_text)
    
    if original_price is None or original_price <= 0:
        await message.answer(
            "‚ùå **–û—à–∏–±–∫–∞!**\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞.\n"
            "–ü—Ä–∏–º–µ—Ä—ã: 29.99, ‚Ç¨29.99, $29.99",
            reply_markup=get_cancel_price_calculation_keyboard()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
    calculation_data['original_price'] = original_price
    
    await state.set_state(PriceCalculationStates.waiting_for_final_price)
    
    await message.answer(
        f"‚úÖ **–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏–Ω—è—Ç–∞:** {format_price_display(original_price)}\n\n"
        "üí∞ **–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤–º–µ—Å—Ç–µ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π**\n\n"
        "‚úÖ–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ –Ω–∞—à–µ–≥–æ —Å–∫–ª–∞–¥–∞ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏: ‚Ç¨5.00, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Ç–∞—Ä–∏—Ñ –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n"
        "‚ùóÔ∏è –ï—Å–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è, —Ç–æ –º—ã —É–º–µ–Ω—å—à–∏–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ ‚Ç¨5.00. –ï—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–æ–ª–µ–µ ‚Ç¨5.00, —Ç–æ –º—ã —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —ç—Ç—É —Å—É–º–º—É.\n\n"
        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ **—Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤–º–µ—Å—Ç–µ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π** –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã:\n"
        "‚Ä¢ 39.99\n"
        "‚Ä¢ ‚Ç¨39.99\n"
        "‚Ä¢ $39.99\n\n"
        "‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=get_cancel_price_calculation_keyboard()
    )

@router.message(PriceCalculationStates.waiting_for_final_price)
async def handle_final_price(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Ü–µ–Ω—ã"""
    price_text = message.text.strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
    final_price = extract_price_value(price_text)
    
    if final_price is None or final_price <= 0:
        await message.answer(
            "‚ùå **–û—à–∏–±–∫–∞!**\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É.\n"
            "–ü—Ä–∏–º–µ—Ä—ã: 39.99, ‚Ç¨39.99, $39.99",
            reply_markup=get_cancel_price_calculation_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞
    original_price = calculation_data.get('original_price', 0)
    if final_price < original_price:
        await message.answer(
            "‚ùå **–û—à–∏–±–∫–∞!**\n\n"
            f"–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ ({format_price_display(final_price)}) –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ ({format_price_display(original_price)}).\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É.",
            reply_markup=get_cancel_price_calculation_keyboard()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É
    calculation_data['final_price'] = final_price
    
    await state.set_state(PriceCalculationStates.waiting_for_delivery_type)
    
    await message.answer(
        f"‚úÖ **–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –ø—Ä–∏–Ω—è—Ç–∞:** {format_price_display(final_price)}\n\n"
        "üì¶ **–í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ì–µ—Ä–º–∞–Ω–∏–∏ –¥–æ –†–æ—Å—Å–∏–∏**\n\n"
        "üöö –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ –ì–µ—Ä–º–∞–Ω–∏–∏ –¥–æ –†–æ—Å—Å–∏–∏:",
        reply_markup=get_delivery_type_keyboard_for_calculation()
    )

@router.callback_query(F.data == "cancel_price_calculation")
async def cancel_price_calculation(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã"""
    await callback.answer()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
    current_data = await state.get_data()
    cart = current_data.get('cart', [])
    
    calculation_data.clear()
    await state.clear()
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await state.update_data(cart=cart)
    
    await callback.message.edit_text(
        "‚ùå –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.",
        reply_markup=get_back_keyboard()
    )



@router.callback_query(F.data == "back_to_delivery_type")
async def back_to_delivery_type(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    await callback.answer()
    
    await state.set_state(PriceCalculationStates.waiting_for_delivery_type)
    
    await callback.message.edit_text(
        "üì¶ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –†–æ—Å—Å–∏–∏:",
        reply_markup=get_delivery_type_keyboard_for_calculation()
    )